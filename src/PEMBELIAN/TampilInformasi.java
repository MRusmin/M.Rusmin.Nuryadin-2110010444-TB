/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PEMBELIAN;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import javax.swing.JTable;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author SWIFT
 */
public class TampilInformasi extends javax.swing.JFrame {
    Connection con;
    Statement st;
    ResultSet rs;
     
    
      
    
    public TampilInformasi() {
    initComponents();
    Koneksi.getKoneksi();
    data();
    
    }
    
    private void data(){
     try{
            con = Koneksi.getKoneksi();
            String sql1 = "SELECT * FROM informasi order by id ASC";
            st = con.createStatement();
            rs = st.executeQuery(sql1);
            while(rs.next()){
                DefaultTableModel model = (DefaultTableModel) info.getModel();
                Object[] row = new Object[6];
                row[0] = rs.getString("id");
                row[1] = rs.getString("ttl");
                row[2] = rs.getString("umur");
                row[3] = rs.getString("no_telpon");
                row[4] = rs.getString("status");
                row[5] = rs.getString("negara");
                model.addRow(row);
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
            
            
        }
     
    }
    
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        info = new javax.swing.JTable();
        jnama = new javax.swing.JTextField();
        jttl = new javax.swing.JTextField();
        jumur = new javax.swing.JTextField();
        jtelpon = new javax.swing.JTextField();
        istatus = new javax.swing.JComboBox<>();
        jnegara = new javax.swing.JTextField();
        psimpan = new javax.swing.JButton();
        pedit = new javax.swing.JButton();
        phapus = new javax.swing.JButton();
        ptiket = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        info.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Tempat Tanggal Lahir", "Umur", "Telpon", "Status", "Negara"
            }
        ));
        jScrollPane1.setViewportView(info);
        if (info.getColumnModel().getColumnCount() > 0) {
            info.getColumnModel().getColumn(0).setResizable(false);
            info.getColumnModel().getColumn(1).setResizable(false);
            info.getColumnModel().getColumn(2).setResizable(false);
            info.getColumnModel().getColumn(3).setResizable(false);
            info.getColumnModel().getColumn(4).setResizable(false);
            info.getColumnModel().getColumn(5).setResizable(false);
        }

        jumur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumurActionPerformed(evt);
            }
        });

        istatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kawin\t", "belum kawin" }));

        psimpan.setText("Simpan");
        psimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psimpanActionPerformed(evt);
            }
        });

        pedit.setText("Edit");
        pedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peditActionPerformed(evt);
            }
        });

        phapus.setText("Hapus");
        phapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phapusActionPerformed(evt);
            }
        });

        ptiket.setText("Tiket");
        ptiket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ptiketActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 102));
        jLabel1.setText("Masukan Data Diri Anda ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 102));
        jLabel2.setText("Nama ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 102));
        jLabel3.setText("Tempat Tanggal Lahir");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 102));
        jLabel4.setText("Umur ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 102));
        jLabel5.setText("Telepon");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 102));
        jLabel6.setText("Status");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 102));
        jLabel7.setText("Negara");

        jLabel8.setBackground(new java.awt.Color(255, 255, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 102));
        jLabel8.setText("Terima Kasih");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jnama)
                    .addComponent(jttl)
                    .addComponent(jumur, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                .addGap(173, 173, 173)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jtelpon, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(istatus, javax.swing.GroupLayout.Alignment.LEADING, 0, 181, Short.MAX_VALUE)
                    .addComponent(jnegara, javax.swing.GroupLayout.Alignment.LEADING)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(406, 406, 406)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1043, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ptiket, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(psimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(pedit, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(326, 326, 326)
                        .addComponent(phapus, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtelpon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jttl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(istatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jumur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jnegara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(psimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pedit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phapus, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(ptiket, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jumurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumurActionPerformed

    private void ptiketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ptiketActionPerformed
    new inputtiket().setVisible(true);
                dispose();
                        // TODO add your handling code here:
    }//GEN-LAST:event_ptiketActionPerformed

    private void phapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phapusActionPerformed
        int selectedRow = info.getSelectedRow(); // Mendapatkan baris yang dipilih oleh pengguna

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris data yang akan dihapus");
    } else {
        int confirmation = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                Connection cn = Koneksi.getKoneksi(); // Menggunakan objek Koneksi untuk mendapatkan koneksi

                DefaultTableModel model = (DefaultTableModel) info.getModel();

                // Mendapatkan nilai ID dari baris yang dipilih
                String idToDelete = model.getValueAt(selectedRow, 0).toString();

                // Perintah SQL untuk menghapus baris tertentu berdasarkan ID dari database dbumin
                String sql = "DELETE FROM informasi WHERE id = ?";

                try (PreparedStatement pstmt = cn.prepareStatement(sql)) {
                    pstmt.setString(1, idToDelete);
                    int deletedRows = pstmt.executeUpdate();

                    if (deletedRows > 0) {
                        JOptionPane.showMessageDialog(null, "Data berhasil dihapus");

                        // Menghapus baris dari model tabel
                        model.removeRow(selectedRow);
                    } else {
                        JOptionPane.showMessageDialog(null, "Gagal menghapus data");
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
                }
            }
        }      // TODO add your handling code here:
                                             // TODO add your handling code here:
    }//GEN-LAST:event_phapusActionPerformed

    private void psimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psimpanActionPerformed
    try {
        Connection cn = Koneksi.getKoneksi(); // Menggunakan objek Koneksi untuk mendapatkan koneksi

        String id = jnama.getText();
        String ttl = jttl.getText();
        String umur = jumur.getText();
        String no_telpon = jtelpon.getText();
        String status = istatus.getSelectedItem().toString();
        String negara = jnegara.getText();

        String query = "INSERT INTO informasi (id, ttl, umur, no_telpon, status, negara) "
                     + "VALUES (?, ?, ?, ?, ?, ?)";

        try (PreparedStatement pstmt = cn.prepareStatement(query)) {
            pstmt.setString(1, id);
            pstmt.setString(2, ttl);
            pstmt.setString(3, umur);
            pstmt.setString(4, no_telpon);
            pstmt.setString(5, status);
            pstmt.setString(6, negara);

            int hasil = pstmt.executeUpdate();

            if (hasil > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
                data(); // Menampilkan data terbaru setelah penyimpanan data berhasil
            } else {
                JOptionPane.showMessageDialog(this, "Data gagal ditambahkan");
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        Logger.getLogger(TampilInformasi.class.getName()).log(Level.SEVERE, null, ex);
    }

    }//GEN-LAST:event_psimpanActionPerformed

    private void peditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peditActionPerformed
 int selectedRow = info.getSelectedRow(); // Mendapatkan baris yang dipilih oleh pengguna

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris data yang akan diubah");
    } else {
        try {
            con = Koneksi.getKoneksi();
            String id = jnama.getText();
            String ttl = jttl.getText();
            String umur = jumur.getText();
            String no_telpon = jtelpon.getText();
            String status = istatus.getSelectedItem().toString();
            String negara = jnegara.getText();

            DefaultTableModel model = (DefaultTableModel) info.getModel();
            String idToUpdate = model.getValueAt(selectedRow, 0).toString();

            String sql = "UPDATE informasi SET id=?, ttl=?, umur=?, no_telpon=?, status=?, negara=? WHERE id=?";
            try (PreparedStatement pstmt = con.prepareStatement(sql)) {
                pstmt.setString(1, id);
                pstmt.setString(2, ttl);
                pstmt.setString(3, umur);
                pstmt.setString(4, no_telpon);
                pstmt.setString(5, status);
                pstmt.setString(6, negara);
                pstmt.setString(7, idToUpdate);

                int updatedRows = pstmt.executeUpdate();

                if (updatedRows > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil diubah");
                    model.setRowCount(0);
                    data(); // Menampilkan data terbaru setelah pembaruan data berhasil
                    bersih();
                } else {
                    JOptionPane.showMessageDialog(null, "Gagal mengubah data");
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    }//GEN-LAST:event_peditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TampilInformasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TampilInformasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TampilInformasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TampilInformasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TampilInformasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable info;
    private javax.swing.JComboBox<String> istatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jnama;
    private javax.swing.JTextField jnegara;
    private javax.swing.JTextField jtelpon;
    private javax.swing.JTextField jttl;
    private javax.swing.JTextField jumur;
    private javax.swing.JButton pedit;
    private javax.swing.JButton phapus;
    private javax.swing.JButton psimpan;
    private javax.swing.JButton ptiket;
    // End of variables declaration//GEN-END:variables

    private void tampilkan() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void bersih() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
